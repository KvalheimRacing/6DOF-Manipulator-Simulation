//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
// File: inertia_forces_numeric.cpp
//
// MATLAB Coder version            : 3.3
// C/C++ source code generated on  : 16-Jul-2018 10:22:09
//

// Include Files
#include "rt_nonfinite.h"
#include "inertia_forces_numeric.h"

// Function Definitions

//
// INERTIA_FORCES_NUMERIC
//     D = INERTIA_FORCES_NUMERIC(T2,T3,T4,T5,T6)
// Arguments    : double T2
//                double T3
//                double T4
//                double T5
//                double T6
//                double D[36]
// Return Type  : void
//
void inertia_forces_numeric(double T2, double T3, double T4, double T5, double
  T6, double D[36])
{
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;
  double t10;
  double t11;
  double t12;
  double t13;
  double t14;
  double t15;
  double t16;
  double t17;
  double t18;
  double t19;
  double t20;
  double t21;
  double t22;
  double t23;
  double t24;
  double t25;
  double t26;
  double t27;
  double t28;
  double t29;
  double t30;
  double t31;
  double t32;
  double t33;
  double t34;
  double t52;
  double t53;
  double t54;
  double t55;
  double t56;
  double t57;
  double t58;
  double t59;
  double t60;
  double t61;
  double t62;
  double t63;
  double t64;
  double t65;
  double t35;
  double t36;
  double t37;
  double t38;
  double t39;
  double t40;
  double t42;
  double t43;
  double t44;
  double t45;
  double t46;
  double t47;
  double t48;
  double t49;
  double t50;
  double t51;
  double t70;
  double t71;
  double t69;
  double t72;
  double t73;
  double t74;
  double t75;
  double t76;
  double t77;
  double t78;
  double t79;
  double t80;
  double t81;
  double t102;
  double t104;
  double t105;
  double t103;
  double t106;
  double t113;
  double t115;
  double b_t6[36];
  int i0;
  int i1;

  //     This function was generated by the Symbolic Math Toolbox version 7.2.
  //     10-Jul-2018 14:20:58
  t2 = std::cos(T2);
  t3 = std::cos(T3);
  t4 = std::cos(T4);
  t5 = std::cos(T6);
  t6 = t2 * t2;
  t7 = t3 * t3;
  t8 = t4 * t4;
  t9 = std::cos(T5);
  t10 = t5 * t5;
  t11 = t9 * t9;
  t12 = std::sin(T3);
  t13 = std::sin(T5);
  t14 = std::sin(T2);
  t15 = std::sin(T4);
  t16 = std::sin(T6);
  t17 = t2 * t12 * t15 * 0.030164709972430769;
  t18 = t3 * t14 * t15 * 0.030164709972430769;
  t19 = t12 * t14 * t15 * 0.0648785461;
  t20 = t4 * t12 * t14 * t15 * 2.0870319035683722;
  t21 = t2 * t12 * t13 * t15 * 0.0185923829;
  t22 = t3 * t13 * t14 * t15 * 0.0185923829;
  t23 = t9 * t12 * t14 * t15 * 0.03197481235;
  t24 = t4 * t9 * t12 * t14 * t15 * 0.0371847658;
  t25 = t2 * t9 * t12 * t13 * t15 * 1.3445399895549821;
  t26 = t3 * t9 * t13 * t14 * t15 * 1.3445399895549821;
  t27 = t5 * t12 * t13 * t14 * t16 * 0.135069508599162;
  t28 = t4 * t11 * t12 * t14 * t15 * 1.3445399895549821;
  t29 = t4 * t10 * t12 * t14 * t15 * 0.270139017198324;
  t30 = t2 * t3 * t5 * t8 * t13 * t16 * 0.270139017198324;
  t31 = t2 * t3 * t4 * t10 * t11 * t15 * 0.135069508599162;
  t32 = t2 * t4 * t5 * t9 * t12 * t16 * 0.135069508599162;
  t33 = t3 * t4 * t5 * t9 * t14 * t16 * 0.135069508599162;
  t34 = t4 * t9 * t12 * t13 * t14 * t15 * 0.060329419944861552;
  t52 = t2 * t3 * t15 * 0.0648785461;
  t53 = t2 * t3 * t4 * t15 * 2.0870319035683722;
  t54 = t2 * t3 * t9 * t15 * 0.03197481235;
  t55 = t2 * t11 * t12 * t15 * 0.060329419944861552;
  t56 = t3 * t11 * t14 * t15 * 0.060329419944861552;
  t57 = t2 * t3 * t4 * t9 * t15 * 0.0371847658;
  t58 = t2 * t3 * t5 * t13 * t16 * 0.135069508599162;
  t59 = t2 * t3 * t4 * t11 * t15 * 1.3445399895549821;
  t60 = t2 * t3 * t4 * t10 * t15 * 0.270139017198324;
  t61 = t2 * t9 * t10 * t12 * t13 * t15 * 0.135069508599162;
  t62 = t3 * t9 * t10 * t13 * t14 * t15 * 0.135069508599162;
  t63 = t5 * t8 * t12 * t13 * t14 * t16 * 0.270139017198324;
  t64 = t4 * t10 * t11 * t12 * t14 * t15 * 0.135069508599162;
  t65 = t2 * t3 * t4 * t9 * t13 * t15 * 0.060329419944861552;
  t35 = ((((((((((((((((((((((((((((((((t17 + t18) + t19) + t20) + t21) + t22) +
    t23) + t24) + t25) + t26) + t27) + t28) + t29) + t30) + t31) + t32) + t33) +
                        t34) - t52) - t53) - t54) - t55) - t56) - t57) - t58) -
                t59) - t60) - t61) - t62) - t63) - t64) - t65) - t2 * t15 *
         0.091203068) - t2 * t9 * t15 * 0.044948618;
  t36 = t3 * 0.360739302;
  t37 = t10 * 0.135069508599162;
  t38 = t3 * t4 * 0.182406136;
  t39 = t3 * t4 * t9 * 0.089897236;
  t40 = t8 * t10 * t11 * 0.135069508599162;
  t42 = std::sin(T5 * 2.0);
  t43 = t4 * 0.1297570922;
  t44 = t8 * 2.0870319035683722;
  t45 = t8 * t9 * 0.0371847658;
  t46 = t8 * t11 * 1.3445399895549821;
  t47 = t8 * t10 * 0.270139017198324;
  t48 = t10 * t11 * 0.135069508599162;
  t49 = t4 * t9 * 0.0639496247;
  t50 = t8 * t9 * t13 * 0.060329419944861552;
  t51 = t4 * t5 * t13 * t15 * t16 * 0.270139017198324;
  t70 = t42 * 0.030164709972430769;
  t71 = t11 * 1.3445399895549821;
  t69 = ((((((((((((((((-t37 - t40) + t43) + t44) + t45) + t46) + t47) + t48) +
                 t49) + t50) + t51) + t3 * 0.180369651) + t3 * t4 * 0.091203068)
            + t3 * t4 * t9 * 0.044948618) - t70) - t71) - t12 * t13 *
         0.044948618) + 7.6944847649964112;
  t72 = t15 * 0.030164709972430769;
  t73 = t13 * t15 * 0.0185923829;
  t74 = t9 * t13 * t15 * 1.3445399895549821;
  t75 = t4 * t5 * t9 * t16 * 0.135069508599162;
  t76 = t4 * 2.5529573469357851;
  t77 = t9 * 0.03197481235;
  t78 = t4 * t10 * 0.135069508599162;
  t79 = t4 * t9 * 0.0185923829;
  t80 = t5 * t13 * t15 * t16 * 0.135069508599162;
  t81 = t9 * t15 * 0.26650543660831089;
  t102 = ((((((((((((((((((((((((((t2 * t12 * 3.07139830597608 + t3 * t14 *
    3.07139830597608) + t4 * t14 * 0.091203068) + t2 * t3 * t4 *
    0.030164709972430769) + t2 * t4 * t12 * 0.0648785461) + t3 * t4 * t14 *
    0.0648785461) + t2 * t9 * t12 * 0.0371847658) + t3 * t9 * t14 * 0.0371847658)
    + t4 * t9 * t14 * 0.044948618) + t2 * t11 * t12 * 1.3445399895549821) + t3 *
    t11 * t14 * 1.3445399895549821) + t2 * t3 * t4 * t13 * 0.0185923829) + t2 *
                        t4 * t9 * t12 * 0.03197481235) + t3 * t4 * t9 * t14 *
                       0.03197481235) + t2 * t9 * t12 * t13 *
                      0.060329419944861552) + t3 * t9 * t13 * t14 *
                     0.060329419944861552) + t4 * t11 * t12 * t14 *
                    0.060329419944861552) + t2 * t3 * t4 * t9 * t13 *
                   1.3445399895549821) + t4 * t9 * t10 * t12 * t13 * t14 *
                  0.135069508599162) + t5 * t9 * t12 * t14 * t15 * t16 *
                 0.135069508599162) - t4 * t12 * t14 * 0.030164709972430769) -
               t2 * t3 * t4 * t11 * 0.060329419944861552) - t2 * t10 * t11 * t12
              * 0.135069508599162) - t3 * t10 * t11 * t14 * 0.135069508599162) -
            t4 * t12 * t13 * t14 * 0.0185923829) - t4 * t9 * t12 * t13 * t14 *
           1.3445399895549821) - t2 * t3 * t4 * t9 * t10 * t13 *
          0.135069508599162) - t2 * t3 * t5 * t9 * t15 * t16 * 0.135069508599162;
  t104 = t11 * t15 * 0.060329419944861552;
  t105 = t9 * t10 * t13 * t15 * 0.135069508599162;
  t103 = ((((((t72 + t73) + t74) + t75) - t104) - t105) - t12 * t15 *
          0.091203068) - t9 * t12 * t15 * 0.044948618;
  t106 = t9 * 0.0371847658;
  t113 = (((((((((((t12 * t14 * t15 * 2.5529573469357851 + t9 * t12 * t14 * t15 *
                    0.0185923829) + t10 * t12 * t14 * t15 * 0.135069508599162) +
                  t2 * t5 * t9 * t12 * t16 * 0.135069508599162) + t3 * t5 * t9 *
                 t14 * t16 * 0.135069508599162) + t2 * t3 * t4 * t5 * t13 * t16 *
                0.135069508599162) - t2 * t3 * t15 * 2.5529573469357851) - t13 *
              t14 * t15 * 0.044948618) - t2 * t3 * t9 * t15 * 0.0185923829) - t2
            * t3 * t10 * t15 * 0.135069508599162) - t2 * t12 * t13 * t15 *
           0.03197481235) - t3 * t13 * t14 * t15 * 0.03197481235) - t4 * t5 *
    t12 * t13 * t14 * t16 * 0.135069508599162;
  t115 = (((((t76 + t77) + t78) + t79) + t80) + t3 * t9 * 0.044948618) - t4 *
    t12 * t13 * 0.044948618;
  t76 = (((t76 + t77) + t78) + t79) + t80;
  t77 = t5 * t9 * t16 * 0.135069508599162;
  t78 = ((t2 * t3 * t4 * t9 * 0.26650543660831089 - t2 * t12 * t13 *
          0.26650543660831089) - t3 * t13 * t14 * 0.26650543660831089) - t4 * t9
    * t12 * t14 * 0.26650543660831089;
  t79 = ((((t6 * 1.229167852279101 + t7 * 3.2741132679882909) - t8 *
           2.0870319035683722) + t36) + t37) + t38;
  b_t6[0] =
    (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((
    ((((((((((((((((((((((t79 + t39) + t40) + t106) - t3 * t6 * 0.360739302) +
    t4 * t6 * 0.1297570922) + t4 * t7 * 0.1297570922) - t6 * t7 *
    6.5482265359765819) + t6 * t8 * 2.0870319035683722) + t7 * t8 *
    2.0870319035683722) - t6 * t10 * 0.135069508599162) + t6 * t11 *
    1.3445399895549821) - t7 * t10 * 0.135069508599162) - t8 * t9 * 0.0371847658)
    + t7 * t11 * 1.3445399895549821) - t8 * t10 * 0.270139017198324) - t8 * t11 *
    1.3445399895549821) - t12 * t13 * 0.089897236) - t3 * t4 * t6 * 0.182406136)
    - t4 * t6 * t7 * 0.2595141844) - t3 * t4 * t12 * 0.060329419944861552) + t4 *
    t6 * t9 * 0.0639496247) - t2 * t4 * t14 * 0.060329419944861552) + t4 * t7 *
    t9 * 0.0639496247) - t6 * t7 * t8 * 4.1740638071367426) + t6 * t7 * t10 *
    0.270139017198324) + t6 * t8 * t9 * 0.0371847658) - t6 * t7 * t11 *
    2.6890799791099642) + t6 * t8 * t10 * 0.270139017198324) + t7 * t8 * t9 *
    0.0371847658) + t6 * t8 * t11 * 1.3445399895549821) + t7 * t8 * t10 *
    0.270139017198324) + t7 * t8 * t11 * 1.3445399895549821) - t6 * t10 * t11 *
    0.135069508599162) + t2 * t12 * t14 * 0.360739302) - t3 * t12 * t13 *
    0.0639496247) + t6 * t9 * t13 * 0.060329419944861552) - t7 * t10 * t11 *
    0.135069508599162) - t2 * t13 * t14 * 0.0639496247) + t7 * t9 * t13 *
    0.060329419944861552) - t8 * t9 * t13 * 0.060329419944861552) + t6 * t12 *
    t13 * 0.089897236) - t3 * t4 * t6 * t9 * 0.089897236) + t3 * t4 * t6 * t12 *
    0.1206588398897231) - t4 * t6 * t7 * t9 * 0.1278992494) + t2 * t4 * t7 * t14
    * 0.1206588398897231) + t3 * t4 * t11 * t12 * 0.1206588398897231) - t6 * t7 *
    t8 * t9 * 0.0743695316) + t2 * t3 * t12 * t14 * 6.5482265359765819) + t2 *
    t4 * t11 * t14 * 0.1206588398897231) - t6 * t7 * t8 * t10 *
    0.540278034396648) + t2 * t3 * t13 * t14 * 0.089897236) + t2 * t4 * t12 *
    t14 * 0.182406136) - t3 * t4 * t12 * t13 * 0.0371847658) - t6 * t7 * t8 *
    t11 * 2.6890799791099642) - t2 * t4 * t13 * t14 * 0.0371847658) + t3 * t6 *
    t12 * t13 * 0.1278992494) + t6 * t7 * t10 * t11 * 0.270139017198324) - t6 *
    t7 * t9 * t13 * 0.1206588398897231) - t6 * t8 * t10 * t11 *
    0.135069508599162) + t2 * t7 * t13 * t14 * 0.1278992494) + t6 * t8 * t9 *
    t13 * 0.060329419944861552) - t7 * t8 * t10 * t11 * 0.135069508599162) + t7 *
    t8 * t9 * t13 * 0.060329419944861552) + t2 * t3 * t4 * t12 * t14 *
    0.2595141844) - t3 * t4 * t6 * t11 * t12 * 0.24131767977944621) - t2 * t4 *
    t7 * t11 * t14 * 0.24131767977944621) + t3 * t4 * t6 * t12 * t13 *
    0.0743695316) + t2 * t3 * t8 * t12 * t14 * 4.1740638071367426) + t2 * t4 *
    t7 * t13 * t14 * 0.0743695316) - t2 * t3 * t10 * t12 * t14 *
    0.270139017198324) + t2 * t4 * t9 * t12 * t14 * 0.089897236) - t3 * t4 * t9 *
    t12 * t13 * 2.6890799791099642) + t2 * t3 * t11 * t12 * t14 *
    2.6890799791099642) - t2 * t4 * t9 * t13 * t14 * 2.6890799791099642) + t6 *
    t7 * t8 * t10 * t11 * 0.270139017198324) - t6 * t7 * t8 * t9 * t13 *
    0.1206588398897231) - t4 * t5 * t13 * t15 * t16 * 0.270139017198324) + t2 *
    t3 * t4 * t9 * t12 * t14 * 0.1278992494) + t3 * t4 * t6 * t9 * t12 * t13 *
    5.3781599582199284) + t2 * t3 * t8 * t9 * t12 * t14 * 0.0743695316) + t2 *
                       t3 * t8 * t10 * t12 * t14 * 0.540278034396648) + t2 * t4 *
                      t7 * t9 * t13 * t14 * 5.3781599582199284) + t2 * t3 * t8 *
                     t11 * t12 * t14 * 2.6890799791099642) + t3 * t4 * t9 * t10 *
                    t12 * t13 * 0.270139017198324) - t2 * t3 * t10 * t11 * t12 *
                   t14 * 0.270139017198324) + t2 * t4 * t9 * t10 * t13 * t14 *
                  0.270139017198324) + t2 * t3 * t9 * t12 * t13 * t14 *
                 0.1206588398897231) + t4 * t5 * t6 * t13 * t15 * t16 *
                0.270139017198324) + t3 * t5 * t9 * t12 * t15 * t16 *
               0.270139017198324) + t4 * t5 * t7 * t13 * t15 * t16 *
              0.270139017198324) + t2 * t5 * t9 * t14 * t15 * t16 *
             0.270139017198324) - t3 * t4 * t6 * t9 * t10 * t12 * t13 *
            0.540278034396648) - t2 * t4 * t7 * t9 * t10 * t13 * t14 *
           0.540278034396648) - t2 * t3 * t8 * t10 * t11 * t12 * t14 *
          0.270139017198324) + t2 * t3 * t8 * t9 * t12 * t13 * t14 *
         0.1206588398897231) - t3 * t5 * t6 * t9 * t12 * t15 * t16 *
        0.540278034396648) - t4 * t5 * t6 * t7 * t13 * t15 * t16 *
       0.540278034396648) - t2 * t5 * t7 * t9 * t14 * t15 * t16 *
      0.540278034396648) + t2 * t3 * t4 * t5 * t12 * t13 * t14 * t15 * t16 *
     0.540278034396648) + 10.93603968756322;
  b_t6[1] = t35;
  b_t6[2] = ((((((((((((((((((((((((((((((t17 + t18) + t19) + t20) + t21) + t22)
    + t23) + t24) + t25) + t26) + t27) + t28) + t29) + t30) + t31) + t32) + t33)
    + t34) - t52) - t53) - t54) - t55) - t56) - t57) - t58) - t59) - t60) - t61)
               - t62) - t63) - t64) - t65;
  b_t6[3] = t102;
  b_t6[4] = t113;
  b_t6[5] = t78;
  b_t6[6] = t35;
  b_t6[7] = ((((((((((((((((t11 * -1.3445399895549821 + t36) - t37) + t38) + t39)
                        - t40) - t42 * 0.030164709972430769) + t43) + t44) + t45)
                   + t46) + t47) + t48) + t49) + t50) + t51) - t12 * t13 *
             0.089897236) + 15.54117566906292;
  b_t6[8] = t69;
  b_t6[9] = t103;
  b_t6[10] = t115;
  b_t6[11] = t81;
  b_t6[12] = ((((((((((((((((((((((((((((((t17 + t18) + t19) + t20) + t21) + t22)
    + t23) + t24) + t25) + t26) + t27) + t28) + t29) + t30) + t31) + t32) + t33)
    + t34) - t2 * t3 * t15 * 0.0648785461) - t2 * t3 * t4 * t15 *
    2.0870319035683722) - t2 * t3 * t9 * t15 * 0.03197481235) - t2 * t11 * t12 *
                       t15 * 0.060329419944861552) - t3 * t11 * t14 * t15 *
                      0.060329419944861552) - t2 * t3 * t4 * t9 * t15 *
                     0.0371847658) - t2 * t3 * t4 * t10 * t15 *
                    0.270139017198324) - t2 * t3 * t4 * t11 * t15 *
                   1.3445399895549821) - t2 * t3 * t5 * t13 * t16 *
                  0.135069508599162) - t2 * t3 * t4 * t9 * t13 * t15 *
                 0.060329419944861552) - t2 * t9 * t10 * t12 * t13 * t15 *
                0.135069508599162) - t3 * t9 * t10 * t13 * t14 * t15 *
               0.135069508599162) - t4 * t10 * t11 * t12 * t14 * t15 *
              0.135069508599162) - t5 * t8 * t12 * t13 * t14 * t16 *
    0.270139017198324;
  b_t6[13] = t69;
  b_t6[14] = ((((((((((((-t37 - t40) + t43) + t44) + t45) + t46) + t47) + t48) +
                  t49) + t50) + t51) - t70) - t71) + 7.6944847649964112;
  b_t6[15] = ((((t72 + t73) + t74) + t75) - t104) - t105;
  b_t6[16] = t76;
  b_t6[17] = t81;
  b_t6[18] = t102;
  b_t6[19] = t103;
  b_t6[20] = ((((t72 + t73) + t74) + t75) - t11 * t15 * 0.060329419944861552) -
    t9 * t10 * t13 * t15 * 0.135069508599162;
  b_t6[21] = (((-t48 + t70) + t71) + t106) + 3.07139830597608;
  b_t6[22] = t77;
  b_t6[23] = t13 * -0.26650543660831089;
  b_t6[24] = t113;
  b_t6[25] = t115;
  b_t6[26] = t76;
  b_t6[27] = t77;
  b_t6[28] = t16 * t16 * -0.135069508599162 + 2.6880268555349471;
  b_t6[29] = 0.0;
  b_t6[30] = t78;
  b_t6[31] = t81;
  b_t6[32] = t81;
  b_t6[33] = t13 * -0.26650543660831089;
  b_t6[34] = 0.0;
  b_t6[35] = 0.26650543660831089;
  for (i0 = 0; i0 < 6; i0++) {
    for (i1 = 0; i1 < 6; i1++) {
      D[i1 + 6 * i0] = b_t6[i1 + 6 * i0];
    }
  }
}

//
// File trailer for inertia_forces_numeric.cpp
//
// [EOF]
//
